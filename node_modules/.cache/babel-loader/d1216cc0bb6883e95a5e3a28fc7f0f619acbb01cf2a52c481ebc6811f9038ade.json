{"ast":null,"code":"import React,{useState}from\"react\";import{Container,Row,Col,Card,Button}from\"react-bootstrap\";import{useNavigate}from\"react-router-dom\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const ExploreChallenges=_ref=>{let{challenges}=_ref;const navigate=useNavigate();const[searchTerm,setSearchTerm]=useState(\"\");const[statusFilter,setStatusFilter]=useState(\"All\");const[levelFilter,setLevelFilter]=useState([]);const handleCardClick=id=>{navigate(`/challenge/${id}`);};const handleSearch=e=>{setSearchTerm(e.target.value);};const handleStatusChange=e=>{setStatusFilter(e.target.value);};const handleLevelChange=e=>{const level=e.target.value;setLevelFilter(prev=>prev.includes(level)?prev.filter(l=>l!==level):[...prev,level]);};const filteredChallenges=challenges.filter(challenge=>{const matchesSearch=challenge.challengeName.toLowerCase().includes(searchTerm.toLowerCase());const matchesStatus=statusFilter===\"All\"||challenge.status===statusFilter;const matchesLevel=levelFilter.length===0||levelFilter.includes(challenge.levelType);return matchesSearch&&matchesStatus&&matchesLevel;});return/*#__PURE__*/_jsxs(Container,{fluid:true,className:\"bg-dark text-white p-5\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"text-center\",children:\"Explore Challenges\"}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Search\",value:searchTerm,onChange:handleSearch}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{children:\"Status\"}),/*#__PURE__*/_jsxs(\"select\",{value:statusFilter,onChange:handleStatusChange,children:[/*#__PURE__*/_jsx(\"option\",{value:\"All\",children:\"All\"}),/*#__PURE__*/_jsx(\"option\",{value:\"Active\",children:\"Active\"}),/*#__PURE__*/_jsx(\"option\",{value:\"Upcoming\",children:\"Upcoming\"}),/*#__PURE__*/_jsx(\"option\",{value:\"Past\",children:\"Past\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{children:\"Level\"}),/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",value:\"Easy\",onChange:handleLevelChange}),\" \",\"Easy\",/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",value:\"Medium\",onChange:handleLevelChange}),\" \",\"Medium\",/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",value:\"Hard\",onChange:handleLevelChange}),\" \",\"Hard\"]})]}),/*#__PURE__*/_jsx(Row,{className:\"mt-4\",children:filteredChallenges.map(challenge=>/*#__PURE__*/_jsx(Col,{md:4,className:\"mb-4\",children:/*#__PURE__*/_jsxs(Card,{className:\"bg-light text-dark\",onClick:()=>handleCardClick(challenge.id),style:{cursor:\"pointer\"},children:[/*#__PURE__*/_jsx(Card.Img,{variant:\"top\",src:challenge.image}),/*#__PURE__*/_jsxs(Card.Body,{children:[/*#__PURE__*/_jsx(Card.Title,{children:challenge.challengeName}),/*#__PURE__*/_jsxs(Card.Text,{children:[\"Status: \",challenge.levelType]}),challenge.status===\"Upcoming\"&&/*#__PURE__*/_jsxs(Card.Text,{children:[\"Starts in: \",challenge.startDate]}),challenge.status===\"Past\"&&/*#__PURE__*/_jsxs(Card.Text,{children:[\"Ended on: \",challenge.endDate]}),/*#__PURE__*/_jsx(Button,{variant:\"primary\",children:\"Participate Now\"})]})]})},challenge.id))})]});};export default ExploreChallenges;","map":{"version":3,"names":["React","useState","Container","Row","Col","Card","Button","useNavigate","jsx","_jsx","jsxs","_jsxs","ExploreChallenges","_ref","challenges","navigate","searchTerm","setSearchTerm","statusFilter","setStatusFilter","levelFilter","setLevelFilter","handleCardClick","id","handleSearch","e","target","value","handleStatusChange","handleLevelChange","level","prev","includes","filter","l","filteredChallenges","challenge","matchesSearch","challengeName","toLowerCase","matchesStatus","status","matchesLevel","length","levelType","fluid","className","children","type","placeholder","onChange","map","md","onClick","style","cursor","Img","variant","src","image","Body","Title","Text","startDate","endDate"],"sources":["/Users/nitinkumarsingh/hacathonTyoescript/hackathon/src/components/pages/ExploreChallenges.tsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { Container, Row, Col, Card, Button } from \"react-bootstrap\";\nimport { useNavigate } from \"react-router-dom\";\n\ninterface Challenge {\n  id: number;\n  challengeName: string;\n  startDate: string;\n  endDate: string;\n  image: string;\n  levelType: string;\n  status: \"Active\" | \"Upcoming\" | \"Past\";\n}\n\ninterface ExploreChallengesProps {\n  challenges: Challenge[];\n}\n\nconst ExploreChallenges: React.FC<ExploreChallengesProps> = ({\n  challenges,\n}) => {\n  const navigate = useNavigate();\n\n  const [searchTerm, setSearchTerm] = useState<string>(\"\");\n  const [statusFilter, setStatusFilter] = useState<string>(\"All\");\n  const [levelFilter, setLevelFilter] = useState<string[]>([]);\n\n  const handleCardClick = (id: number) => {\n    navigate(`/challenge/${id}`);\n  };\n\n  const handleSearch = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setSearchTerm(e.target.value);\n  };\n\n  const handleStatusChange = (e: React.ChangeEvent<HTMLSelectElement>) => {\n    setStatusFilter(e.target.value);\n  };\n\n  const handleLevelChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const level = e.target.value;\n    setLevelFilter((prev) =>\n      prev.includes(level) ? prev.filter((l) => l !== level) : [...prev, level]\n    );\n  };\n\n  const filteredChallenges = challenges.filter((challenge) => {\n    const matchesSearch = challenge.challengeName\n      .toLowerCase()\n      .includes(searchTerm.toLowerCase());\n    const matchesStatus =\n      statusFilter === \"All\" || challenge.status === statusFilter;\n    const matchesLevel =\n      levelFilter.length === 0 || levelFilter.includes(challenge.levelType);\n\n    return matchesSearch && matchesStatus && matchesLevel;\n  });\n\n  return (\n    <Container fluid className=\"bg-dark text-white p-5\">\n      <h2 className=\"text-center\">Explore Challenges</h2>\n\n      <div>\n        <input\n          type=\"text\"\n          placeholder=\"Search\"\n          value={searchTerm}\n          onChange={handleSearch}\n        />\n        <div>\n          <label>Status</label>\n          <select value={statusFilter} onChange={handleStatusChange}>\n            <option value=\"All\">All</option>\n            <option value=\"Active\">Active</option>\n            <option value=\"Upcoming\">Upcoming</option>\n            <option value=\"Past\">Past</option>\n          </select>\n        </div>\n        <div>\n          <label>Level</label>\n          <input\n            type=\"checkbox\"\n            value=\"Easy\"\n            onChange={handleLevelChange}\n          />{\" \"}\n          Easy\n          <input\n            type=\"checkbox\"\n            value=\"Medium\"\n            onChange={handleLevelChange}\n          />{\" \"}\n          Medium\n          <input\n            type=\"checkbox\"\n            value=\"Hard\"\n            onChange={handleLevelChange}\n          />{\" \"}\n          Hard\n        </div>\n      </div>\n\n      <Row className=\"mt-4\">\n        {filteredChallenges.map((challenge) => (\n          <Col md={4} key={challenge.id} className=\"mb-4\">\n            <Card\n              className=\"bg-light text-dark\"\n              onClick={() => handleCardClick(challenge.id)}\n              style={{ cursor: \"pointer\" }}\n            >\n              <Card.Img variant=\"top\" src={challenge.image} />\n              <Card.Body>\n                <Card.Title>{challenge.challengeName}</Card.Title>\n                <Card.Text>Status: {challenge.levelType}</Card.Text>\n                {challenge.status === \"Upcoming\" && (\n                  <Card.Text>Starts in: {challenge.startDate}</Card.Text>\n                )}\n                {challenge.status === \"Past\" && (\n                  <Card.Text>Ended on: {challenge.endDate}</Card.Text>\n                )}\n                <Button variant=\"primary\">Participate Now</Button>\n              </Card.Body>\n            </Card>\n          </Col>\n        ))}\n      </Row>\n    </Container>\n  );\n};\n\nexport default ExploreChallenges;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}