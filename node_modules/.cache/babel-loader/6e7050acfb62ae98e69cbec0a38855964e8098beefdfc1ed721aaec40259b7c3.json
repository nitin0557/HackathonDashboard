{"ast":null,"code":"var _jsxFileName = \"/Users/nitinkumarsingh/hacathonTyoescript/hackathon/src/components/CreateChallenge.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Form, Button } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CreateChallenge = ({\n  addChallenge,\n  closeModal\n}) => {\n  _s();\n  // Define state with appropriate types\n  const [challengeName, setChallengeName] = useState('');\n  const [startDate, setStartDate] = useState('');\n  const [endDate, setEndDate] = useState('');\n  const [description, setDescription] = useState('');\n  const [image, setImage] = useState(null);\n  const [levelType, setLevelType] = useState('Easy');\n\n  // Handle form submission\n  const handleSubmit = e => {\n    e.preventDefault();\n    const newChallenge = {\n      id: Date.now(),\n      // Assign a unique id (replace with proper id generation logic)\n      challengeName,\n      startDate,\n      endDate,\n      description,\n      image: image || '',\n      // Ensure image is a string, fallback to empty string if null\n      levelType,\n      status: 'Active' // Add a default status if required by the Challenge type\n    };\n    addChallenge(newChallenge);\n    closeModal(); // Close the modal after submission\n  };\n\n  // Handle file input change\n  const handleImageChange = e => {\n    if (e.target.files && e.target.files[0]) {\n      setImage(URL.createObjectURL(e.target.files[0]));\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Form, {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n      controlId: \"challengeName\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n        children: \"Challenge Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n        type: \"text\",\n        value: challengeName,\n        onChange: e => setChallengeName(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n      controlId: \"startDate\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n        children: \"Start Date\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n        type: \"date\",\n        value: startDate,\n        onChange: e => setStartDate(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n      controlId: \"endDate\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n        children: \"End Date\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n        type: \"date\",\n        value: endDate,\n        onChange: e => setEndDate(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n      controlId: \"description\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n        children: \"Description\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n        as: \"textarea\",\n        rows: 3,\n        value: description,\n        onChange: e => setDescription(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n      controlId: \"image\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n        children: \"Image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n        type: \"file\",\n        onChange: handleImageChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n      controlId: \"levelType\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n        children: \"Level Type\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n        as: \"select\",\n        value: levelType,\n        onChange: e => setLevelType(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Easy\",\n          children: \"Easy\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Medium\",\n          children: \"Medium\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Hard\",\n          children: \"Hard\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"primary\",\n      type: \"submit\",\n      children: \"Create Challenge\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n_s(CreateChallenge, \"hTp0lS+OKKxHoyAlb2Zhs4cha+c=\");\n_c = CreateChallenge;\nexport default CreateChallenge;\nvar _c;\n$RefreshReg$(_c, \"CreateChallenge\");","map":{"version":3,"names":["React","useState","Form","Button","jsxDEV","_jsxDEV","CreateChallenge","addChallenge","closeModal","_s","challengeName","setChallengeName","startDate","setStartDate","endDate","setEndDate","description","setDescription","image","setImage","levelType","setLevelType","handleSubmit","e","preventDefault","newChallenge","id","Date","now","status","handleImageChange","target","files","URL","createObjectURL","onSubmit","children","Group","controlId","Label","fileName","_jsxFileName","lineNumber","columnNumber","Control","type","value","onChange","required","as","rows","variant","_c","$RefreshReg$"],"sources":["/Users/nitinkumarsingh/hacathonTyoescript/hackathon/src/components/CreateChallenge.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { Form, Button } from 'react-bootstrap';\n\ninterface Challenge {\n    id: number;\n    challengeName: string;\n    startDate: string;\n    endDate: string;\n    description: string;\n    image: string;\n    levelType: 'Easy' | 'Medium' | 'Hard';\n    status: 'Active' | 'Upcoming' | 'Past';\n  }\n\ninterface CreateChallengeProps {\n  addChallenge: (challenge: Challenge) => void;\n  closeModal: () => void;\n}\n\nconst CreateChallenge: React.FC<CreateChallengeProps> = ({ addChallenge, closeModal }) => {\n  // Define state with appropriate types\n  const [challengeName, setChallengeName] = useState<string>('');\n  const [startDate, setStartDate] = useState<string>('');\n  const [endDate, setEndDate] = useState<string>('');\n  const [description, setDescription] = useState<string>('');\n  const [image, setImage] = useState<string | null>(null);\n  const [levelType, setLevelType] = useState<'Easy' | 'Medium' | 'Hard'>('Easy');\n\n  // Handle form submission\n  const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    \n    const newChallenge: Challenge = {\n      id: Date.now(), // Assign a unique id (replace with proper id generation logic)\n      challengeName,\n      startDate,\n      endDate,\n      description,\n      image: image || '', // Ensure image is a string, fallback to empty string if null\n      levelType,\n      status: 'Active' // Add a default status if required by the Challenge type\n    };\n\n    addChallenge(newChallenge);\n    closeModal(); // Close the modal after submission\n  };\n\n  // Handle file input change\n  const handleImageChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    if (e.target.files && e.target.files[0]) {\n      setImage(URL.createObjectURL(e.target.files[0]));\n    }\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Form.Group controlId=\"challengeName\">\n        <Form.Label>Challenge Name</Form.Label>\n        <Form.Control\n          type=\"text\"\n          value={challengeName}\n          onChange={(e) => setChallengeName(e.target.value)}\n          required\n        />\n      </Form.Group>\n\n      <Form.Group controlId=\"startDate\">\n        <Form.Label>Start Date</Form.Label>\n        <Form.Control\n          type=\"date\"\n          value={startDate}\n          onChange={(e) => setStartDate(e.target.value)}\n          required\n        />\n      </Form.Group>\n\n      <Form.Group controlId=\"endDate\">\n        <Form.Label>End Date</Form.Label>\n        <Form.Control\n          type=\"date\"\n          value={endDate}\n          onChange={(e) => setEndDate(e.target.value)}\n          required\n        />\n      </Form.Group>\n\n      <Form.Group controlId=\"description\">\n        <Form.Label>Description</Form.Label>\n        <Form.Control\n          as=\"textarea\"\n          rows={3}\n          value={description}\n          onChange={(e) => setDescription(e.target.value)}\n          required\n        />\n      </Form.Group>\n\n      <Form.Group controlId=\"image\">\n        <Form.Label>Image</Form.Label>\n        <Form.Control\n          type=\"file\"\n          onChange={handleImageChange}\n          required\n        />\n      </Form.Group>\n\n      <Form.Group controlId=\"levelType\">\n        <Form.Label>Level Type</Form.Label>\n        <Form.Control\n          as=\"select\"\n          value={levelType}\n          onChange={(e) => setLevelType(e.target.value as 'Easy' | 'Medium' | 'Hard')}\n        >\n          <option value=\"Easy\">Easy</option>\n          <option value=\"Medium\">Medium</option>\n          <option value=\"Hard\">Hard</option>\n        </Form.Control>\n      </Form.Group>\n\n      <Button variant=\"primary\" type=\"submit\">\n        Create Challenge\n      </Button>\n    </Form>\n  );\n};\n\nexport default CreateChallenge;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}